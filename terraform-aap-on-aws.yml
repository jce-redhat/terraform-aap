---
- name: Create AAP infrastructure nodes with terraform
  hosts: '{{ target | default("localhost") }}'

  vars_files:
    - vars/terraform_aap.yml

  tasks:
    - name: Ensure terraform state S3 bucket exists
      amazon.aws.s3_bucket:
        name: '{{ terraform_state_aws_bucket }}'
        state: present
        region: '{{ terraform_state_aws_region }}'
      when: terraform_state_create_bucket | bool

    - name: Create SSH key pair used for AAP instances
      amazon.aws.ec2_key:
        name: '{{ terraform_build_name }}_key'
        region: '{{ terraform_aws_region }}'
        key_type: rsa
      register: _ec2_key
      notify: Write private key file
      when: terraform_create_build_key | bool

    # cloud.terraform.git_plan seems to assume a plan file will exist
    # in the repo, but plan files may contain sensitive information so
    # check it out directly instead
    - name: Clone terraform AAP infrastructure plan repo
      ansible.builtin.git:
        repo: '{{ terraform_aap_infra_repo }}'
        version: '{{ terraform_aap_infra_repo_version | default(omit) }}'
        dest: '{{ terraform_local_dir }}'
        clone: true

    - name: Apply terraform AAP infrastructure plan
      cloud.terraform.terraform:
        project_path: '{{ terraform_local_dir }}'
        state: present
        force_init: true
        backend_config:
          region: '{{ terraform_state_aws_region }}'
          bucket: '{{ terraform_state_aws_bucket }}'
          key: '{{ terraform_state_aws_bucket_key }}'
        complex_vars: true
        variables: '{{ terraform_tfvars }}'

    - name: Create terraform.tfvars file
      ansible.builtin.template:
        src: templates/terraform.tfvars.j2
        dest: '{{ terraform_local_dir }}/terraform.tfvars'
        mode: 0644

    - name: Create AWS dynamic inventory
      ansible.builtin.template:
        src: templates/aws_ec2.yml.j2
        dest: '{{ playbook_dir }}/inventory/aws_ec2.yml'
        mode: 0644
      when: inventory_source == 'dynamic'

  handlers:
    - name: Write private key file
      ansible.builtin.copy:
        content: '{{ _ec2_key.key.private_key }}'
        dest: '{{ playbook_dir }}/terraform_build_key.pem'
        mode: 0600

...
# vim: ft=yaml.ansible
